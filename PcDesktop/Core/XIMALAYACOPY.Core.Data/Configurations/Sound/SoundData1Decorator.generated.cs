
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//		如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类实现 SoundData1ConfigurationAppend 分部方法。
// </auto-generated>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using FluentJson.Configuration;
using FluentJson;
using XIMALAYACOPY.Core.Data.Decorator;
using XIMALAYACOPY.Core.Models.Sound;

namespace XIMALAYACOPY.Core.Data
{
    /// <summary>
    ///     SoundData1
    /// </summary>
    /// <typeparam name="T"></typeparam>
    public partial class SoundData1Decorator<T> : Decorator<T>
    {
        partial void doAddOtherConfig();
        /// <summary>
        ///     
        /// </summary>
        /// <typeparam name="result"></typeparam>
        public SoundData1Decorator(Result<T> result)
            : base(result)
        {

        }
        /// <summary>
        ///     
        /// </summary>
        /// <typeparam name="result"></typeparam>
        public override void doAddConfig()
        {
            base.doAddConfig();
            this.Config.MapType<SoundData>(map => map
                
                    .Field<System.Int64>(field => field.TrackId, type => type.To("track_id"))

                    .Field<System.Int64>(field => field.AlbumID, type => type.To("album_id"))

                    .Field<System.String>(field => field.AlbumTitle, type => type.To("album_title"))

                    .Field<System.Int64>(field => field.CommentCount, type => type.To("comments_counts"))

                    .Field<System.Int64>(field => field.CreateAt, type => type.To("createdAt"))

                    .Field<System.Double>(field => field.Duration, type => type.To("duration"))

                    .Field<System.Boolean>(field => field.IsLike, type => type.To("is_favorited"))

                    .Field<System.Boolean>(field => field.IsRelay, type => type.To("isRelay"))

                    .Field<System.Int64>(field => field.LikeCount, type => type.To("favorites_counts"))

                    .Field<System.String>(field => field.PlayUrl32, type => type.To("play_path_32"))

                    .Field<System.Int64>(field => field.PlayCount, type => type.To("plays_counts"))

                    .Field<System.Int64>(field => field.ShareCount, type => type.To("shares_counts"))

                    .Field<System.String>(field => field.Title, type => type.To("title"))

                    .Field<System.Int32>(field => field.UploadSource, type => type.To("upload_source"))

                    .Field<System.Int32>(field => field.OpType, type => type.To("op_type"))

                    .Field<System.String>(field => field.WaveForm, type => type.To("waveform"))

                    .Field<System.Int32>(field => field.ActivityId, type => type.To("activity_id"))

                    .Field<System.String>(field => field.AlbumImage, type => type.To("album_cover_path"))

                    .Field<System.String>(field => field.AlbumImage86, type => type.To("album_cover_path_86"))

                    .Field<System.String>(field => field.AlbumImage640, type => type.To("album_cover_path_640"))

                    .Field<System.Int64>(field => field.CategoryID, type => type.To("category_id"))

                    .Field<System.String>(field => field.CommentID, type => type.To("comment_id"))

                    .Field<System.String>(field => field.CoverLarge, type => type.To("coverLarge"))

                    .Field<System.String>(field => field.CoverSmall, type => type.To("coverSmall"))

                    .Field<System.String>(field => field.Intro, type => type.To("intro"))

                    .Field<System.Boolean>(field => field.IsPlulic, type => type.To("is_public"))

                    .Field<System.String>(field => field.NickName, type => type.To("nickname"))

                    .Field<System.String>(field => field.PlayUrl64, type => type.To("play_path_64"))

                    .Field<System.Int32>(field => field.ProcessState, type => type.To("transcode_state"))

                    .Field<System.String>(field => field.refComment, type => type.To("comment_content"))

                    .Field<System.String>(field => field.SmallLogo, type => type.To("smallLogo"))

                    .Field<System.String>(field => field.Tags, type => type.To("tags"))

                    .Field<System.Int64>(field => field.UID, type => type.To("track_uid"))

            );
            this.doAddOtherConfig();
        }
    }
}
