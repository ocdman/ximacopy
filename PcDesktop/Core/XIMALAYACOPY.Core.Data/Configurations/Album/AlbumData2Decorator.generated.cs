
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//		如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类实现 AlbumData2ConfigurationAppend 分部方法。
// </auto-generated>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using FluentJson.Configuration;
using FluentJson;
using XIMALAYACOPY.Core.Data.Decorator;
using XIMALAYACOPY.Core.Models.Album;

namespace XIMALAYACOPY.Core.Data
{
    /// <summary>
    ///     AlbumData2
    /// </summary>
    /// <typeparam name="T"></typeparam>
    public partial class AlbumData2Decorator<T> : Decorator<T>
    {
        partial void doAddOtherConfig();
        /// <summary>
        ///     
        /// </summary>
        /// <typeparam name="result"></typeparam>
        public AlbumData2Decorator(Result<T> result)
            : base(result)
        {

        }
        /// <summary>
        ///     
        /// </summary>
        /// <typeparam name="result"></typeparam>
        public override void doAddConfig()
        {
            base.doAddConfig();
            this.Config.MapType<AlbumData>(map => map
                
                    .Field<System.Int64>(field => field.AlbumID, type => type.To("album_id"))

                    .Field<System.String>(field => field.AlbumCoverUrl290, type => type.To("album_cover_path_290"))

                    .Field<System.String>(field => field.AlbumCoverUrl640, type => type.To("album_cover_path_640"))

                    .Field<System.String>(field => field.AlbumCoverUrl86, type => type.To("album_cover_path_86"))

                    .Field<System.String>(field => field.AlbumNickName, type => type.To("album_nickname"))

                    .Field<System.String>(field => field.AvatarPath, type => type.To("avatar_path"))

                    .Field<System.String>(field => field.AvatarPath86, type => type.To("avatar_path_86"))

                    .Field<System.Int64>(field => field.CategoryID, type => type.To("category_id"))

                    .Field<System.String>(field => field.CoverPath, type => type.To("cover_path"))

                    .Field<System.Int64>(field => field.CreateDate, type => type.To("createdAt"))

                    .Field<System.String>(field => field.DigStatus, type => type.To("dig_status"))

                    .Field<System.String>(field => field.HumanCategoryID, type => type.To("human_category_id"))

                    .Field<System.String>(field => field.Intro, type => type.To("intro"))

                    .Field<System.Boolean>(field => field.IsCrawler, type => type.To("is_crawler"))

                    .Field<System.Boolean>(field => field.IsDelete, type => type.To("is_deleted"))

                    .Field<System.Boolean>(field => field.IsPublic, type => type.To("is_public"))

                    .Field<System.Boolean>(field => field.IsPublish, type => type.To("is_publish"))

                    .Field<System.Boolean>(field => field.IsRecordsDesc, type => type.To("is_records_desc"))

                    .Field<System.Boolean>(field => field.IsV, type => type.To("is_v"))

                    .Field<System.Boolean>(field => field.IsVerified, type => type.To("isVerified"))

                    .Field<System.String>(field => field.LastUptrackCoverPath, type => type.To("last_uptrack_cover_path"))

                    .Field<System.Int64>(field => field.LastUptrackDate, type => type.To("last_uptrack_at"))

                    .Field<System.Int64>(field => field.LastUptrackID, type => type.To("last_uptrack_id"))

                    .Field<System.String>(field => field.MusicCategory, type => type.To("music_category"))

                    .Field<System.String>(field => field.NickName, type => type.To("nickname"))

                    .Field<System.String>(field => field.OpType, type => type.To("op_type"))

                    .Field<System.Int64>(field => field.PlayCount, type => type.To("plays_counts"))

                    .Field<System.String>(field => field.RichIntro, type => type.To("rich_intro"))

                    .Field<System.String>(field => field.ShortIntro, type => type.To("short_intro"))

                    .Field<System.String>(field => field.SourceUrl, type => type.To("source_url"))

                    .Field<System.Int32>(field => field.Status, type => type.To("status"))

                    .Field<System.String>(field => field.Tags, type => type.To("tags"))

                    .Field<System.String>(field => field.Title, type => type.To("title"))

                    .Field<System.Int32>(field => field.TrackCount, type => type.To("tracks_counts"))

                    .Field<System.Int32>(field => field.TrackOrder, type => type.To("tracks_order"))

                    .Field<System.Int64>(field => field.Uid, type => type.To("uid"))

                    .Field<System.Int64>(field => field.UpdateDate, type => type.To("updatedAt"))

                    .Field<System.Int32>(field => field.UserSource, type => type.To("user_source"))

            );
            this.doAddOtherConfig();
        }
    }
}
