<#+
// <copyright file="RepositoriesTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class RepositoriesTemplate : CSharpTemplate
{
	 private XIMALAYACOPY.Tools.T4.T4ModelInfo _model;
        
    public RepositoriesTemplate(XIMALAYACOPY.Tools.T4.T4ModelInfo model)
    {
        _model = model;
    }

    /// <summary>
    /// 获取 生成的文件名，根据模型名定义
    /// </summary>
    public string FileName
    {
        get
        { 
            return string.Format("{0}Repositories.generated.cs", _model.Name);
        }
    }

	public override string TransformText()
	{
#>
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//		如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类实现 <#= _model.Name #>ConfigurationAppend 分部方法。
// </auto-generated>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ComponentModel;
using System.ComponentModel.Composition;

using XIMALAYACOPY.Core.Data;
using XIMALAYACOPY.Core.Models. <#= _model.ModuleName #>;

namespace XIMALAYACOPY.Core.Data
{
    /// <summary>
    /// 分类查询操作
    /// </summary>
    [Export(typeof(I<#= _model.Name #>Repository))]
    public class <#= _model.Name #>Repository : RepositoryBase<<#= _model.Name #>>, I<#= _model.Name #>Repository
    {

    }
}

<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
