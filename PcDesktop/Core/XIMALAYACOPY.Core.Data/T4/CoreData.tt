<#@ template language="C#" debug="True" #>
<#@ output extension="cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="$(SolutionDir)\build\XIMALAYACOPY.Tools.dll" #>
<#@ Assembly Name="$(SolutionDir)\build\XIMALAYACOPY.Core.Models.dll" #>
<#@ import namespace="System.IO" #>
<#@ Import Namespace="System.Linq" #>
<#@ Import Namespace="System.Text" #>
<#@ Import Namespace="System.Windows" #>
<#@ import namespace="System.Reflection" #>
<#@ Import Namespace="System.Collections.Generic" #>
<#@ Import Namespace="XIMALAYACOPY.Tools" #>
<#@ Import Namespace="XIMALAYACOPY.Tools.Extension" #>
<#@ Import Namespace="XIMALAYACOPY.Tools.T4" #>
<#@ Import Namespace="XIMALAYACOPY.Core.Models" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="Includes\JsonConfigurationTemplate.ttinclude" #>
<#@ include file="Includes\JsonConfigurationDecoratorTemplate.ttinclude" #>
<#@ include file="Includes\IRepositoriesTemplate.ttinclude" #>
<#@ include file="Includes\RepositoriesTemplate.ttinclude" #>
<#@ include file="Includes\JsonDecoratorTemplate.ttinclude" #>

<#
    string currentPath = Path.GetDirectoryName(Host.TemplateFile);
    string projectPath =currentPath.Substring(0, currentPath.IndexOf(@"\T4"));

    Type baseType = typeof(XIMALAYACOPY.Core.Models.BaseResult);

    Assembly assembly = baseType.Assembly;

    IEnumerable<Type> modelTypes = assembly.GetTypes().Where(m => m.IsAssignableToGenericType(baseType) && !m.IsAbstract);

    foreach(Type modelType in modelTypes)
    {
        T4ModelInfo model = new T4ModelInfo(modelType, true);
        //实体映射类
        JsonDecoratorTemplate config = new JsonDecoratorTemplate(model);
        var path = model.UseModuleDir 
            ? string.Format(@"{0}\Configurations\{1}", projectPath, model.ModuleName)
            : string.Format(@"{0}\Configurations", projectPath);
        config.Output.Encoding = Encoding.UTF8;
        config.RenderToFile(Path.Combine(path, config.FileName));

        IRepositoriesTemplate config1= new IRepositoriesTemplate(model);
        RepositoriesTemplate config2= new RepositoriesTemplate(model);

        path = model.UseModuleDir 
            ? string.Format(@"{0}\Repositories\{1}", projectPath, model.ModuleName)
            : string.Format(@"{0}\Repositories", projectPath);
        config1.Output.Encoding = Encoding.UTF8;
        config1.RenderToFile(Path.Combine(path, config1.FileName));

        config2.Output.Encoding = Encoding.UTF8;
        config2.RenderToFile(Path.Combine(path, config2.FileName));
    }

    baseType = typeof(BaseData);
    modelTypes = assembly.GetTypes().Where(m => m.IsAssignableToGenericType(baseType) && !m.IsAbstract);

    foreach(Type modelType in modelTypes)
    {
        T4ModelInfo model = new T4ModelInfo(modelType, true);
        //实体映射类
        JsonDecoratorTemplate config = new JsonDecoratorTemplate(model);
        var path = model.UseModuleDir 
            ? string.Format(@"{0}\Configurations\{1}", projectPath, model.ModuleName)
            : string.Format(@"{0}\Configurations", projectPath);
        config.Output.Encoding = Encoding.UTF8;
        config.RenderToFile(Path.Combine(path, config.FileName));
    }
#>